# Tutorial: Running Stata in Galileo

## Gettting started with Stata in Galileo

### Licensing

Stata is propriety software licensed by StataCorp LLC. In order to run Stata on Galileo and comply with our terms of use, you must have a valid Stata 16 license.

We have implemented a bring-your-own license system. To use Stata with Galileo please add your stata.lic file from your home or office computer running Stata 16 to your Galileo project folder. On OS X, the file can typically be found at /Applications/Stata/stata.lic or by searching the file system.

We do not sell Stata licenses. Additional information on Stata can be found at [their website](http://stata.com/). Any other inquiries about Stata or licensing can be directed to [support@hypernetlabs.io](support@hypernetlabs.io).

## Let's take a look at our files

Our Stata example folder contains two files named carsdata<span></span>.do and carsdata.dta. The carsdata<span></span>.do script conducts a linear regression using the carsdata.dta dataset and makes a simple plot.

## Understanding the user interface and creating a Mission

When you log into Galileo, the first thing youâ€™ll see is your Dashboard:

![View of the Galileo Dashboard](images/common/dashboard.png)

To run the Stata notebook, start by navigating to the Missions tab using the side menu. On the Missions tab, click the **Creat a custom mission** button.

![Mission view](images/common/mission.png)

Configure the mission by selecting the mission type. Choose **Stata** and then select the version. This tutorial will use **Interactive (Jupyter)**.

Next, give the mission a name and assign it to a default station to use. This tutorial will use the **Linux** station. Click **Next**.

![Configuring the mission](images/Stata/configure_mission.png)

Set the default amount of computational resources for the mission. Choose the CPU resources, GPU resources, and memory resources. Click **Next**.

![Set default resources](images/Stata/resources.png)

Create the mission environment by choosing a password to access the Jupyter session. You can install any dependencies either by selecting them from the drop-down menu of popular repositories or by entering the packages' names manually. Click **Next**.

![Create the mission environment](images/Stata/environment.png)

Finally, select the Cargo Bay you will use for this Mission. You can choose from the default Hypernet storage or an external storage provider. Galileo works seemlessly with cloud storage platforms such as Dropbox and Storj. Find out more about using these platforms [here](https://galileo-sdk.readthedocs.io/en/latest/cargobays.html). Click **Submit**.

The Mission has now been created!

## Running a job and collecting results

You will now see the new Mission reflected in the Mission tab. Click **Update Mission** to add and edit the Mission's files.

![The new Mission in the Mission tab](images/Stata/new_mission.png)

Upload the .ipynb and .csv example files by clicking the **Upload File** button. You will see the files in the Mission interface.

MISSING IMAGE DUE TO TECHNICAL PROBLEM
![The uploaded files are now visible](images/Stata/uploaded.png)

It is possible to edit text files directly in the Mission tab by using the Mission text editor. Find out more about the editor by clicking [here to visit the Galileo forum](https://galileo-forum.hypernetlabs.io/t/mission-text-editor-walkthrough/68).

Now we are ready to run a job using the Mission. Click the **Run** button in the upper right corner of the Mission tab. You will see a "Mission run successfully!" message. At the bottom of the Mission tab, you can track the progress of the job.

![You can track the job's progress below](images/Stata/track_job.png)

Once the job's status is "Job In Progress", you are ready to open Jupyter. Click **Job In Progress** and then click the tunnel URL.

![Click on the tunnel URL](images/Stata/tunnel_url.png)

Enter the Mission password you set previously. Click **Log in**.

You are now using Jupyter in Galileo and you have immediate access to the files you uploaded as part of the Mission.

![Jupyter in Galileo](images/Stata/jupyter.png)

Once you have finished working in Jupyter, navigate back to the Mission tab and open the three-dot menu in the Jobs progress panel. Stop the job by clicking **Stop Job**.

![Stop the job](images/Stata/stop_job.png)

The job will shut down and collect the results. Once the job progress reads "Completed", you can download any files generated by the Juypter job by opening the three-dot menu again and clicking **Download**.

![Download results](images/Stata/download.png)

## Contact us

We hope this tutorial was helpful. Please let us know if you have any questions or any problems using Galileo. Your feedback is extremely important to us. Contact us anytime at [matthew@hypernetlabs.io](matthew@hypernetlabs.io) or [alexander@hypernetlabs.io](alexander@hypernetlabs.io).